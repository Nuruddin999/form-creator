{"version":3,"sources":["store/reducers/auth/types.ts","hooks/useTypedSelector.ts","api/user.ts","store/reducers/auth/action-creators.ts","store/reducers/formschema/types.ts","api/firebase-config.js","api/form.ts","store/reducers/formschema/action-creators.ts","store/reducers/action-creators.ts","hooks/useActions.ts","components/label/Label.tsx","components/textfield/TextField.tsx","components/button/button.tsx","components/error-info/ErrorInfo.tsx","components/loader/loader.tsx","flogo.jpg","components/login/LoginForm.tsx","pages/Login.tsx","Vector.svg","components/dropdown/Dropdown.tsx","components/toggle/ToggleSwitch.tsx","DeleteIcon.svg","Arrow.svg","arrowdown.svg","components/property/PropertyForm.tsx","router/index.ts","pages/addform/AddForm.tsx","hooks/usePrevious.ts","pages/schemaslist/ScemasList.tsx","constants.ts","pages/schemaitem/ScemasList.tsx","components/AppRouter.tsx","components/navbar/Navbar.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/formschema/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["AuthActionEnum","useTypedSelector","useSelector","loginApi","email","password","a","auth","getAuth","signInWithEmailAndPassword","response","user","signupApi","createUserWithEmailAndPassword","logOut","signOut","SchemaActionEnum","AuthActionCreators","setUser","type","SET_USER","payload","setIsAuth","SET_AUTH","setIsLoading","SET_IS_LOADING","setError","SET_ERROR","signup","dispatch","login","uid","errorMessage","message","logout","isLoggedinAction","onAuthStateChanged","error","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","schemasCollectionRef","collection","createFormApi","schema","id","addDoc","getFormsApi","q","query","where","getDocs","data","schemas","docs","map","doc","console","log","getFormItemApi","docRef","getDoc","removeFormItemApi","userDoc","deleteDoc","updateFormItemApi","updateDoc","FormSchemaActionCreators","setSchema","SET_SCHEMA","setSchemaItem","SET_SCHEMA_ITEM","createSchema","name","fields","getState","fetchSchemas","fetchSchemaItem","updateSchemaItem","removeSchemaItem","fetchedSchemas","allActionCreators","useActions","useDispatch","bindActionCreators","Label","label","className","TextField","value","required","onChange","placeholder","onError","isRemoveIcon","delOptionsVaraint","onClick","Button","disabled","form","variant","ErrorInfo","title","Loader","LoginForm","state","isLoading","useState","username","setUsername","setPassword","authStatus","setAuthStatus","formRef","useRef","useEffect","current","dispatchEvent","Event","bubbles","cancelable","setTimeout","src","Flogo","width","onSubmit","e","preventDefault","ref","target","Login","DropDown","options","propertyNumber","isOpen","setOpen","clickedIndex","setIsClicked","Vector","alt","option","index","handleClick","ToggleSWitch","rest","Text","Small","checked","currentValue","defaultChecked","htmlFor","PropertyForm","propertyOrderNumber","property","toggleId","onUpdateProperty","openTabIndex","handleOpenTab","deleteProperty","handleOptionsChange","optionsIndex","key","list","optEl","isEnabledDisplay","undefined","ArrowDownIcon","ArrowIcon","el","length","optionsFiltered","filter","optns","optnsIndex","delOptionsVariant","validation","min","max","pattern","DeleteIcon","RouteNames","AddModal","props","schemaItem","useParams","properties","setProperty","setField","openedTabs","setOpenedTabs","propertyName","setPropertyName","prevLength","usePrevious","router","useHistory","fieldName","fieldValue","propertyIndex","newList","delProperty","elIndex","updatedTabs","propertyObj","propIndex","push","SCHEMAS","SchemasList","SCHEMAITEM","SCHEMAUPDT","editItem","removeItem","ADDMODAL","phoneValidationPattern","SchemaItem","validationStatus","setValidationStatus","setFields","fieldsError","setFieldsError","handleValidation","formIsValid","forEach","innerStateField","isNaN","parseInt","RegExp","test","handleChangeField","errors","field","publicRoutes","path","LOGIN","exact","component","privateRoutes","AddForm","AppRouter","isAuth","route","to","Navbar","App","initialState","reducers","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.486a7f1f.chunk.js","sourcesContent":["import {IUser} from \"../../../models/IUser\";\n\nexport interface AuthState {\n    isAuth: boolean;\n    user: IUser;\n    isLoading: boolean;\n    error: string;\n}\n\nexport enum AuthActionEnum {\n    SET_AUTH = \"SET_AUTH\",\n    SET_ERROR = \"SET_ERROR\",\n    SET_USER = \"SET_USER\",\n    SET_IS_LOADING = \"SET_IS_LOADING\",\n}\n\nexport interface SetAuthAction {\n    type: AuthActionEnum.SET_AUTH;\n    payload: boolean;\n}\nexport interface SetErrorAction {\n    type: AuthActionEnum.SET_ERROR;\n    payload: string;\n}\nexport interface SetUserAction {\n    type: AuthActionEnum.SET_USER;\n    payload: IUser;\n}\nexport interface SetIsLoadingAction {\n    type: AuthActionEnum.SET_IS_LOADING;\n    payload: boolean;\n}\n\nexport type AuthAction =\n    SetAuthAction |\n    SetUserAction |\n    SetErrorAction |\n    SetIsLoadingAction\n","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\nimport {RootState} from \"../store\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\n\n\nexport const loginApi = async (email: string, password: string) => {\n  const auth = getAuth();\n  const response = await signInWithEmailAndPassword(auth, email, password)\n\n  return response.user\n}\nexport const signupApi = async (email: string, password: string) => {\n  const auth = getAuth();\n  const response = await createUserWithEmailAndPassword(auth, email, password)\n  return response.user\n}\nexport const logOut = async () =>{\n  const auth = getAuth();\n  return await signOut(auth)\n}\n","import { loginApi, signupApi, logOut } from './../../../api/user';\nimport { AuthActionEnum, SetAuthAction, SetErrorAction, SetIsLoadingAction, SetUserAction } from \"./types\";\nimport { IUser } from \"../../../models/IUser\";\nimport { AppDispatch } from \"../../index\";\nimport { getAuth } from 'firebase/auth';\n\nexport const AuthActionCreators = {\n  setUser: (user: IUser): SetUserAction => ({ type: AuthActionEnum.SET_USER, payload: user }),\n  setIsAuth: (auth: boolean): SetAuthAction => ({ type: AuthActionEnum.SET_AUTH, payload: auth }),\n  setIsLoading: (payload: boolean): SetIsLoadingAction => ({ type: AuthActionEnum.SET_IS_LOADING, payload }),\n  setError: (payload: string): SetErrorAction => ({ type: AuthActionEnum.SET_ERROR, payload }),\n  signup: (email: string, password: string) => async (dispatch: AppDispatch) => {\n    try {\n      dispatch(AuthActionCreators.setIsLoading(true));\n      await signupApi(email, password)\n      dispatch(AuthActionCreators.setIsLoading(false));\n    } catch (e) {\n      dispatch(AuthActionCreators.setIsLoading(false));\n      dispatch(AuthActionCreators.setError('Произошла ошибка'))\n    }\n  },\n  login: (email: string, password: string) => async (dispatch: AppDispatch) => {\n    try {\n      dispatch(AuthActionCreators.setIsLoading(true));\n      const response = await loginApi(email, password)\n      if (response.uid && response.email) {\n        dispatch(AuthActionCreators.setIsAuth(true));\n        dispatch(AuthActionCreators.setUser({ uid: response.uid, email: response.email }));\n        dispatch(AuthActionCreators.setIsLoading(false));\n      }\n    } catch (e: any) {\n      dispatch(AuthActionCreators.setIsLoading(false));\n      const errorMessage = e.message === 'Firebase: Error (auth/wrong-password).' ? 'неверный пароль' : 'Пользователь не найден'\n      dispatch(AuthActionCreators.setError(errorMessage))\n    }\n  },\n  logout: () => async (dispatch: AppDispatch) => {\n    try {\n      await logOut()\n      dispatch(AuthActionCreators.setUser({} as IUser));\n      dispatch(AuthActionCreators.setIsAuth(false));\n    } catch (error) {\n\n    }\n  },\n  isLoggedinAction: () => (dispatch: AppDispatch) => {\n    dispatch(AuthActionCreators.setIsLoading(true));\n    try {\n      getAuth().onAuthStateChanged(user => {\n        if (user?.email && user.uid) {\n          dispatch(AuthActionCreators.setUser({ uid: user.uid, email: user.email }));\n          dispatch(AuthActionCreators.setIsAuth(true));\n        }\n        dispatch(AuthActionCreators.setIsLoading(false));\n      })\n    } catch (error) {\n      dispatch(AuthActionCreators.setIsLoading(false));\n    }\n  }\n}\n","import { IProperty } from \"../../../models/IUser\";\n\nexport interface SchemaState {\n  schemas: ISchema[];\n  schemaItem: ISchema,\n  error:string,\n  isLoading:boolean\n}\n\nexport enum SchemaActionEnum {\n  SET_SCHEMA = \"SET_SCHEMA\",\n  SET_SCHEMA_ITEM = \"SET_SCHEMA_ITEM\",\n  SET_IS_LOADING = \"SET_IS_LOADING\",\n  SET_ERROR = \"SET_ERROR\",\n}\n\nexport interface SetSchemaAction {\n  type: SchemaActionEnum.SET_SCHEMA;\n  payload: ISchema[]\n}\n\nexport interface SetSchemaItemAction {\n  type: SchemaActionEnum.SET_SCHEMA_ITEM;\n  payload: ISchema\n}\n\nexport interface SetIsLoadingAction {\n  type: SchemaActionEnum.SET_IS_LOADING;\n  payload: boolean;\n}\n\nexport interface SetErrorAction {\n  type: SchemaActionEnum.SET_ERROR;\n  payload: string;\n}\n\nexport type ISchema = {\n  id?: string,\n  uid?: string,\n  name: string,\n  fields: Array<IProperty>\n}\nexport type IFetchedSchema = {\n  id: number\n  schema: {\n    name: string,\n    fields: Array<IProperty>\n  },\n}\n\n\n\n\n\nexport type SchemaAction =\n  SetSchemaAction | SetSchemaItemAction | SetErrorAction | SetIsLoadingAction\n","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"@firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBvr5j94VfQRUCGl05gWSG4SoaFktzcjhA\",\n  authDomain: \"diagnostdemo.firebaseapp.com\",\n  databaseURL: \"https://diagnostdemo-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"diagnostdemo\",\n  storageBucket: \"diagnostdemo.appspot.com\",\n  messagingSenderId: \"139429853213\",\n  appId: \"1:139429853213:web:5cfae7c8480af121abaef4\",\n  measurementId: \"G-M6MQCXTVQ9\"\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const db = getFirestore(app);\n","\n\nimport { ISchema } from \"../store/reducers/formschema/types\";\nimport { db } from \"./firebase-config\";\nimport {\n  collection,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  getDoc,\n  where,\n  query,\n} from \"firebase/firestore\";\n\nconst schemasCollectionRef = collection(db, \"schemas\")\nexport const createFormApi = async (schema: ISchema, id:string) => {\n  const response = await addDoc(schemasCollectionRef,{...schema, uid:id})\n\n  return response\n}\nexport const getFormsApi = async (id:string) : Promise<any> => {\n  const q = query(collection(db, \"schemas\"), where(\"uid\", \"==\", id));\n  const data = await getDocs(q)\n  const schemas =  data.docs.map((doc) => ({ ...doc.data(), id:doc.id }))\n  console.log(schemas)\n  return schemas\n\n}\nexport const getFormItemApi = async (id: string) : Promise<any> => {\n  const docRef = doc(db, \"schemas\", id);\n\n  const data = await getDoc(docRef)\n  return ({...data.data(), id})\n}\nexport const removeFormItemApi = async (id: string) => {\n  const userDoc = doc(db, \"schemas\", id);\n  const response = await deleteDoc(userDoc);\n  return response\n}\n\nexport const updateFormItemApi = async (id: string, schema: ISchema) => {\n  const docRef = doc(db, \"schemas\", id);\n const response =  await updateDoc(docRef, schema);\n  return response\n}","\nimport { createFormApi, getFormsApi, getFormItemApi, removeFormItemApi, updateFormItemApi } from './../../../api/form';\nimport {  ISchema, SchemaActionEnum, SetSchemaAction, SetSchemaItemAction, SetIsLoadingAction, SetErrorAction } from \"./types\";\nimport { IProperty } from \"../../../models/IUser\";\nimport { AppDispatch, RootState } from \"../../index\";\n\nexport const FormSchemaActionCreators = {\n  setSchema: (payload: ISchema[]): SetSchemaAction => ({ type: SchemaActionEnum.SET_SCHEMA, payload }),\n  setSchemaItem: (payload: ISchema): SetSchemaItemAction => ({ type: SchemaActionEnum.SET_SCHEMA_ITEM, payload }),\n  setIsLoading: (payload: boolean): SetIsLoadingAction => ({ type: SchemaActionEnum.SET_IS_LOADING, payload }),\n  setError: (payload: string): SetErrorAction => ({ type: SchemaActionEnum.SET_ERROR, payload }),\n  createSchema: (name: string, fields: Array<IProperty>) => async (dispatch: AppDispatch, getState: () => RootState) => {\n    try {\n      dispatch(FormSchemaActionCreators.setIsLoading(true));\n      await createFormApi({ name, fields }, getState().auth.user.uid)\n      dispatch(FormSchemaActionCreators.setIsLoading(false));\n    } catch (error) {\n    }\n\n  },\n  fetchSchemas: () => async (dispatch: AppDispatch,getState: () => RootState) => {\n    dispatch(FormSchemaActionCreators.setIsLoading(true));\n    try {\n      const response = await getFormsApi(getState().auth.user.uid)\n      dispatch(FormSchemaActionCreators.setSchema(response));\n      dispatch(FormSchemaActionCreators.setIsLoading(false));\n    } catch (e) {\n      dispatch(FormSchemaActionCreators.setIsLoading(false));\n    }\n  },\n  fetchSchemaItem: (id: string) => async (dispatch: AppDispatch) => {\n    dispatch(FormSchemaActionCreators.setIsLoading(true));\n    try {\n      const response = await getFormItemApi(id)\n      dispatch(FormSchemaActionCreators.setSchemaItem(response));\n      dispatch(FormSchemaActionCreators.setIsLoading(false));\n    } catch (e) {\n      dispatch(FormSchemaActionCreators.setIsLoading(false));\n    }\n  },\n  updateSchemaItem: (id: string, schema: ISchema) => async (dispatch: AppDispatch) => {\n    try {\n      await updateFormItemApi(id, schema)\n    } catch (e) {\n    }\n  },\n  removeSchemaItem: (id: string) => async (dispatch: AppDispatch, getState: () => RootState) => {\n    try {\n      await removeFormItemApi(id)\n      const fetchedSchemas = await getFormsApi(getState().auth.user.uid)\n      dispatch(FormSchemaActionCreators.setSchema(fetchedSchemas));\n    } catch (e) {\n    }\n  }\n}\n","import {AuthActionCreators} from \"./auth/action-creators\";\nimport {FormSchemaActionCreators} from \"./formschema/action-creators\";\n\nexport const allActionCreators = {\n    ...AuthActionCreators,\n    ...FormSchemaActionCreators\n}\n","import {useDispatch} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {allActionCreators} from \"../store/reducers/action-creators\";\n\nexport const useActions = () => {\n    const dispatch = useDispatch();\n    return bindActionCreators(allActionCreators, dispatch);\n}\n\n","import React, { FC } from \"react\";\nimport './styles.scss'\n\ntype TextFieldProps = {\n  error?: string,\n  label?: string,\n}\n\nconst Label: FC<TextFieldProps> = ({\n  error,\n  label\n}) => {\n  return <div className='labelcomp'>\n      <label className={error && 'error'}>{error ? error : label}</label>\n  </div>}\n\nexport default Label;","import React, { FC } from \"react\";\nimport Label from \"../label/Label\";\nimport './styles.scss'\n\ntype TextFieldProps = {\n  required?:boolean,\n  type?: string,\n  onChange?: (e: any) => void,\n  value?: string,\n  error?: string,\n  onError?: (e: any) => void,\n  label?: string,\n  placeholder?: string,\n  isRemoveIcon?:boolean,\n  delOptionsVaraint?:()=>void\n}\n\nconst TextField: FC<TextFieldProps> = ({\n  value,\n  required,\n  onChange,\n  onError,\n  placeholder,\n  type,\n  error,\n  label,\n  isRemoveIcon,\n  delOptionsVaraint\n}) => <div className='textfield'>\n    {label && <div>\n      <Label label={label} error={error}/>\n    </div>}\n    <div className={`input-container ${isRemoveIcon ? 'removeIcon':''}`}>\n      <input\n      className={error && 'error'}\n      value={value}\n      onChange={onChange}\n      required={required}\n      type={type}\n      placeholder={placeholder}\n      />\n     { isRemoveIcon && placeholder !== 'значение опции' && <i className=\"remove-icon\" onClick={delOptionsVaraint}>X</i>\n    }\n    </div>\n  </div>\n\nexport default TextField;","import { FC } from \"react\";\nimport './styles.scss'\n\ntype ButtonProps = {\n  name?: string,\n  disabled?: boolean,\n  onClick?: (e: any) => void,\n  type?: \"button\" | \"submit\" | \"reset\" | undefined,\n  form?: string,\n  variant?:\"fill\" | \"inline\" | undefined\n}\n\nconst Button: FC<ButtonProps> = ({\n  name,\n  onClick,\n  disabled,\n  type,\n  form,\n  variant\n}) => <div className='uibutton'>\n    <button\n      onClick={onClick}\n      type={type}\n      disabled={disabled}\n      form={form}\n      className={variant}\n    >\n      {name}\n    </button>\n  </div>\n\nexport default Button;","import  { FC } from 'react';\nimport './errorinfostyle.scss'\n\nconst ErrorInfo: FC<{title:string}> = ({title}) => {\n\n  return (<div className='error-info'>\n    <span>{title}</span>\n  </div>\n  );\n};\n\nexport default ErrorInfo;\n","import React, { FC } from 'react';\nimport './loaderstyle.scss'\n\nconst Loader: FC = () => {\n  return (\n    <div className='lds-wrapper'>\n      <div className=\"lds-dual-ring\"></div>\n      </div>\n  );\n};\n\nexport default Loader;\n","export default __webpack_public_path__ + \"static/media/flogo.150cc412.jpg\";","import { FC, useEffect, useRef, useState } from 'react';\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { useActions } from \"../../hooks/useActions\";\nimport \"./loginformstyle.scss\";\nimport TextField from '../textfield/TextField';\nimport Button from '../button/button';\nimport ErrorInfo from '../error-info/ErrorInfo';\nimport Loader from '../loader/loader';\nimport Flogo from '../../flogo.jpg'\n\nconst LoginForm: FC = () => {\n  const { error, isLoading } = useTypedSelector(state => state.auth);\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [authStatus, setAuthStatus] = useState('')\n\n  const formRef = useRef<HTMLFormElement>(null)\n  const { login, signup, setError } = useActions()\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault()\n    if (authStatus === 'login') {\n      login(username, password)\n    }\n    if (authStatus === 'signup') {\n      signup(username, password)\n    }\n    setAuthStatus('')\n    setUsername('')\n    setPassword('')\n  }\n  useEffect(() => {\n    if (authStatus === 'login' || authStatus === 'signup') {\n      if (formRef.current) {\n        formRef.current.dispatchEvent(\n          new Event(\"submit\", { bubbles: true, cancelable: true })\n        )\n      }\n    }\n  }, [authStatus, username])\n\n  useEffect(() => {\n if(error){\n    setTimeout(()=>{\n      setError('')\n      error === 'неверный пароль' && setPassword('')\n      error === 'Пользователь не найден' && setUsername('')\n  },1000)\n }\n  }, [error])\n\n  return (<div className='loader-wrapper'>\n\n    {isLoading ? <div><Loader /></div> :\n      <div className='login-form-wrapper'>\n        <div className='login-form-wrapper-logo'>\n        <img src={Flogo} width={150}/>\n        </div>\n        <form\n          onSubmit={handleSubmit}\n          ref={formRef}\n        >\n          <div className='login-form-wrapper--inp'>\n            <TextField\n              label='Email'\n              value={username}\n              type='email'\n              onChange={e => setUsername(e.target.value)}\n            />\n          </div>\n          <div className='login-form-wrapper--inp'>\n            <TextField\n              label='Пароль'\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              type='password'\n            />\n          </div>\n          <div className='login-form-wrapper--btn'>\n            <Button\n              type=\"button\"\n              onClick={() => setAuthStatus('login')}\n              variant='fill'\n              name='Войти' />\n          </div>\n          <div className='login-form-wrapper--btn'>\n            <Button\n              type='button'\n              onClick={() => setAuthStatus('signup')}\n              variant='fill'\n              name='Зарегистрироваться' />\n          </div>\n        </form>\n        {error && <ErrorInfo title={error}/>}\n      </div>}\n  </div>\n  );\n};\n\nexport default LoginForm;\n","import { FC } from 'react';\nimport LoginForm from \"../components/login/LoginForm\";\n\nconst Login: FC = () => {\n  return (\n      <LoginForm />\n  );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/Vector.ce7aa419.svg\";","import  { FC, useState } from \"react\";\n\nimport './styles.scss'\nimport Vector from '../../Vector.svg'\nimport Label from \"../label/Label\";\n\n\ntype SelectProps = {\n  required?: boolean,\n  value: string,\n  onChange: (value:string) => void,\n  options: Array<string>,\n  label: string,\n  propertyNumber?: number,\n  error?: string,\n}\n\nconst DropDown: FC<SelectProps> = ({\n  required,\n  onChange,\n  options,\n  value,\n  label,\n  propertyNumber,\n  error\n}) => {\n  const [isOpen, setOpen] = useState(false)\n  const [clickedIndex, setIsClicked] = useState<number | null>(null)\n  const handleClick = (index: number, value: string) => {\n    setIsClicked(index)\n    onChange(value)\n    setOpen(state => !state)\n  }\n  return <div>\n    <div>\n      <Label label={label} error={error}/>\n    </div>\n    <div className={`dropdown ${isOpen ? 'isopened' : ''}`}>\n      <div   className={`dropdown-header ${isOpen ? 'isopened' : ''}`}><span>\n        {value}\n      </span>\n        <img src={Vector} className='vector-svg' alt='vector icon' onClick={() => setOpen(state => !state)} />\n      </div>\n      {isOpen && <div className='dropdownlist'>\n        {options.map((option, index) => <div\n          className={`dropdown-list-item ${clickedIndex === index ? 'clicked' : ''}`}\n          onClick={(e) => handleClick(index, option)}>\n          <span>{option}</span>\n        </div>)}\n      </div>}\n    </div>\n  </div>\n}\n\nexport default DropDown;","import { FC } from \"react\";\nimport './togglestyle.scss'\n\ntype ToggleProps = {\n  id: string,\n  Text: string,\n  onChange?: (e: any) => void,\n  defaultChecked?: boolean,\n  Small?: boolean,\n  currentValue?: boolean,\n}\n\nconst ToggleSWitch: FC<ToggleProps> = ({ id = 'toggle-switch', Text, ...rest }) => <div\n    className={\"toggle-switch\" + (rest.Small ? \"small-switch\" : \"\")}\n  >\n    <input\n      type=\"checkbox\"\n      className=\"toggle-switch-checkbox\"\n      id={id}\n      checked={rest.currentValue}\n      defaultChecked\n      onChange={rest.onChange}\n    />\n    {id ? (\n      <label className=\"toggle-switch-label\" htmlFor={id}>\n        <span\n          className=\"toggle-switch-inner\"\n        />\n        <span\n          className=\"toggle-switch-switch\"\n        />\n      </label>\n    ) : null}\n\n  </div>\n\nexport default ToggleSWitch;","export default __webpack_public_path__ + \"static/media/DeleteIcon.4ad48d4d.svg\";","export default __webpack_public_path__ + \"static/media/Arrow.8afdceb1.svg\";","export default __webpack_public_path__ + \"static/media/arrowdown.68dc6f63.svg\";","import { FC } from \"react\"\nimport { IProperty } from \"../../models/IUser\"\nimport DropDown from \"../dropdown/Dropdown\"\nimport TextField from \"../textfield/TextField\"\nimport ToggleSWitch from \"../../components/toggle/ToggleSwitch\"\nimport DeleteIcon from '../../DeleteIcon.svg'\nimport ArrowIcon from '../../Arrow.svg'\nimport ArrowDownIcon from '../../arrowdown.svg'\nimport './property.scss'\nimport Button from \"../button/button\"\n\ntype PropertyFormProps = {\n  propertyNumber?: number,\n  propertyOrderNumber?: number,\n  toggleId: string,\n  property: IProperty,\n  onUpdateProperty: (field: string, value: any, propertyIndex?: number) => void,\n  openTabIndex?: number | undefined,\n  handleOpenTab?: (index: number) => void,\n  deleteProperty?: (index: number) => void\n}\n\nconst PropertyForm: FC<PropertyFormProps> = ({\n  propertyNumber,\n  propertyOrderNumber,\n  property,\n  toggleId,\n  onUpdateProperty,\n  openTabIndex,\n  handleOpenTab,\n  deleteProperty\n}) => {\n\n  const handleOptionsChange = (e: any, optionsIndex: number, key: string) => {\n    let list = property.options?.map((optEl, index) => index === optionsIndex ? { ...optEl, [key]: e.target.value } : optEl)\n    onUpdateProperty('options', list, propertyNumber)\n  }\n  const addOptionsVariant = () => {\n    if (property.options) {\n      onUpdateProperty('options', [...property.options, { key: '', value: '' }], propertyNumber)\n    }\n  }\n  const delOptionsVariant = (index: number) => {\n    if (property.options) {\n      if (property.options.length > 1) {\n        let optionsFiltered = property.options.filter((optns, optnsIndex) => index !== optnsIndex)\n        onUpdateProperty('options', optionsFiltered, propertyNumber)\n      }\n    }\n  }\n  const handleOptionsValue =(value:string)=>{\n    onUpdateProperty('type', value, propertyNumber)\n  }\n\n  const isEnabledDisplay = () => {\n    if (propertyOrderNumber) {\n      return true\n    }\n    return propertyNumber === openTabIndex\n  }\n\n  return <div className={`property-form ${isEnabledDisplay() ? 'isDisplayed' : ''}`}>\n    <div className=\"property-form-left-column\">\n      <div className={`created-property-item section-title ${propertyNumber !== undefined ? 'is-created' : ''}`}>\n        <img\n          src={propertyNumber === openTabIndex ? ArrowDownIcon : ArrowIcon}\n          alt='arrow icon'\n          className='arrow-icon'\n        />\n        <div onClick={() => handleOpenTab && propertyNumber !== undefined && handleOpenTab(propertyNumber)}>\n          <span>{`Свойство ${propertyNumber !== undefined ? propertyNumber + 1 : propertyOrderNumber}: ${property.label}`}</span><br />\n          {propertyNumber !== undefined && propertyNumber !== openTabIndex && <span className='created-property-keytype'>{property.type},{property.key}</span>}\n        </div>\n      </div>\n      {isEnabledDisplay() && <div>\n        <div className='property-key'>\n          <TextField\n            label='Ключ свойства'\n            value={property.key}\n            required\n            placeholder='Укажите ключ свойства'\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => onUpdateProperty('key', e.target.value, propertyNumber)}\n          />\n        </div>\n        <div className='property-label'>\n          <TextField\n            label='Название свойства'\n            value={property.label}\n            required\n            placeholder='Укажите название свойства'\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => onUpdateProperty('label', e.target.value, propertyNumber)}\n          />\n        </div>\n\n        <div className='dropdown-block'>\n          <DropDown\n            label='Поле для отображения'\n            value={property.type}\n            onChange={handleOptionsValue}\n            options={['Числовое поле', 'Текстовое поле', 'Номер телефона', 'Пароль', 'Выпадающий список']}\n            propertyNumber={propertyNumber}\n          />\n          {property.type === 'Выпадающий список' && <div>\n            {property.options && property.options.map((el, index) => <div key={index} className='property-form-dropdown-inputs'>\n              <div>\n                <TextField\n                  type='text'\n                  placeholder='ключ опции'\n                  value={el.key}\n                  required\n                  onChange={(e) => handleOptionsChange(e, index, 'key')}\n                  isRemoveIcon\n                  delOptionsVaraint={() => delOptionsVariant(index)}\n                />\n              </div>\n              <div>\n                <TextField\n                  type='text'\n                  placeholder='значение опции'\n                  value={el.value}\n                  required\n                  onChange={(e) => handleOptionsChange(e, index, 'value')}\n                  isRemoveIcon\n                />\n              </div>\n            </div>)}\n            <div className=\"add-options-button\">\n            <Button type='button' onClick={() => addOptionsVariant()} name='Добавить' variant=\"fill\"/>\n            </div>\n          </div>}\n        </div>\n      </div>}\n    </div>\n    {isEnabledDisplay() && <div className='validation-section'>\n      <span className='section-title'>Валидация</span>\n      <div className='validation-required-toggle'>\n        <ToggleSWitch\n          id={toggleId}\n          currentValue={property.validation.required}\n          Text='hello'\n          onChange={(e) => onUpdateProperty('validation', { ...property.validation, required: e.target.checked }, propertyNumber)}\n        />\n        <span>Обязательно для заполнения</span>\n      </div>\n      {(property.type === 'Числовое поле' || property.type === 'Пароль' || property.type === 'Текстовое поле') && <div className='validation-section-minmax'>\n        <div className='validation-section-min-max-input'>\n          <TextField\n            type='text'\n            label={property.type === 'Числовое поле' ? 'Мин. значение':'Мин. кол-во символов'}\n            value={property.validation.min}\n            onChange={(e) => onUpdateProperty('validation', { ...property.validation, min: e.target.value }, propertyNumber)}\n            required\n          />\n        </div>\n        <div className='validation-section-min-max-input'>\n          <TextField\n            type='text'\n            label={property.type === 'Числовое поле' ? 'Макс. значение': 'Макс. кол-во символов'}\n            value={property.validation.max}\n            onChange={(e) => onUpdateProperty('validation', { ...property.validation, max: e.target.value }, propertyNumber)}\n            required\n          />\n        </div>\n      </div>}\n      {(property.type === 'Пароль' || property.type === 'Текстовое поле') && <div className='pattern-block'>\n        <TextField\n          type='text'\n          label='Шаблон ввода'\n          value={property.validation.pattern}\n          placeholder='Введите регулярное выражение'\n          onChange={(e) => onUpdateProperty('validation', { ...property.validation, pattern: e.target.value }, propertyNumber)}\n          required={property.type === 'Пароль' || property.type === 'Текстовое поле'}\n        />\n      </div>}\n    </div>}\n    <div className='delete-icon' onClick={() => deleteProperty && propertyNumber !== undefined && deleteProperty(propertyNumber)}>\n      <img src={DeleteIcon} alt='delete-icon' />\n    </div>\n  </div>\n}\nexport default PropertyForm","import React from \"react\";\nimport Login from \"../pages/Login\";\nimport AddForm from '../pages/addform/AddForm';\nimport SchemasList from \"../pages/schemaslist/ScemasList\";\nimport SchemaItem from \"../pages/schemaitem/ScemasList\";\n\nexport interface IRoute {\n  path: string;\n  component: React.ComponentType;\n  exact?: boolean;\n}\n\nexport enum RouteNames {\n  LOGIN = '/login',\n  ADDMODAL = '/addm',\n  SCHEMAS = '/',\n  SCHEMAITEM='/schemas',\n  SCHEMAUPDT='/schemaupd'\n}\n\nexport const publicRoutes: IRoute[] = [\n  { path: RouteNames.LOGIN, exact: true, component: Login },\n]\n\nexport const privateRoutes: IRoute[] = [\n  { path: RouteNames.ADDMODAL, component: AddForm },\n  { path: RouteNames.SCHEMAS, exact: true, component: SchemasList },\n  { path: `${RouteNames.SCHEMAITEM}/:id`, component: SchemaItem },\n  { path: `${RouteNames.SCHEMAUPDT}/:id`, component: AddForm },\n]\n","\nimport  { FC, useEffect,  useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Button from '../../components/button/button';\nimport PropertyForm from '../../components/property/PropertyForm';\nimport { useActions } from '../../hooks/useActions';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport {  IProperty } from '../../models/IUser';\nimport { RouteNames } from '../../router';\nimport './styles.scss'\nimport TextField from '../../components/textfield/TextField';\nimport Loader from '../../components/loader/loader';\ninterface AddModalProps {\n\n}\n\nconst AddModal: FC<AddModalProps> = (props) => {\n  const { schemaItem, isLoading } = useTypedSelector(state => state.schema);\n\n  let { id } = useParams<{ id?: string }>()\n  const [properties, setProperty] = useState<Array<IProperty>>(id ? schemaItem.fields : [])\n\n  const [property, setField] = useState({\n    label: '',\n    key: '',\n    type: 'Текстовое поле',\n    options: [{ key: '', value: '' }],\n    validation: {\n      required: true,\n      min: '',\n      max: '',\n      pattern: ''\n    }\n  })\n  const [openedTabs, setOpenedTabs] = useState({})\n  const [propertyName, setPropertyName] = useState<string>('')\n  const prevLength = usePrevious(properties.length > 0 ? properties.length : 0)\n  const { fetchSchemaItem, createSchema, updateSchemaItem } = useActions();\n  const router = useHistory()\n  const onUpdateProperty = (fieldName: string, fieldValue: any, propertyIndex?: number) => {\n    if (propertyIndex === undefined) {\n      setField(state => ({ ...state, [fieldName]: fieldValue }))\n    }\n    else {\n      const newList = properties.map((property, index) => index === propertyIndex ? ({ ...property, [fieldName]: fieldValue }) : property)\n      setProperty(state => newList)\n    }\n  }\n\n  const delProperty = (index: number) => {\n    setProperty(state => state.filter((el, elIndex) => index !== elIndex))\n  }\n\n  const saveSchema = () => {\n    if (properties.length > 0 && propertyName) {\n      createSchema(propertyName, properties)\n      router.push(RouteNames.SCHEMAS)\n    }\n  }\n  const update = () => {\n    if (id) {\n      updateSchemaItem(id, {\n        name: propertyName,\n        fields: properties\n      })\n    }\n    router.push(RouteNames.SCHEMAS)\n  }\n  const handleOpenTab = (index: number) => {\n    if (openedTabs[index as keyof typeof openedTabs] === index) {\n      const updatedTabs = { ...openedTabs }\n      delete updatedTabs[index as keyof typeof updatedTabs]\n      setOpenedTabs(state => ({ ...updatedTabs }))\n    }\n    else {\n      setOpenedTabs(state => ({ ...state, [index]: index }))\n    }\n  }\n  useEffect(() => {\n    if (prevLength!! < properties.length) {\n      setField(state => ({\n        key: '',\n        label: '',\n        type: 'Текстовое поле',\n        options: [{ key: '', value: '' }],\n        validation: {\n          required: true,\n          min: '',\n          max: '',\n          pattern: ''\n        }\n      }))\n    }\n  }, [properties])\n  useEffect(() => {\n    setField(state => ({\n      ...state,\n      options: [{ key: '', value: '' }],\n      validation: {\n        required: true,\n        min: '',\n        max: '',\n        pattern: ''\n      }\n    }))\n  }, [property.type])\n\n  useEffect(() => {\n    if (id) {\n      fetchSchemaItem(id);\n    }\n    else {\n      setProperty([])\n      setField(state => ({\n        ...state,\n        label: '',\n        type: 'Текстовое поле',\n        options: [{ key: '', value: '' }],\n        validation: {\n          required: true,\n          min: '',\n          max: '',\n          pattern: ''\n        }\n      }))\n    }\n  }, [id])\n\n  useEffect(() => {\n    if (id) {\n      setProperty(schemaItem.fields)\n      setPropertyName(schemaItem.name)\n    }\n  }, [schemaItem])\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault()\n    const propertyObj: IProperty = {\n      key: property.key,\n      type: property.type,\n      label: property.label,\n      validation: {\n        required: property.validation.required,\n        ...(property.type === 'Текстовое поле' || property.type === 'Пароль' ? {\n          min: property.validation.min,\n          max: property.validation.max,\n          pattern: property.validation.pattern\n        } : {}),\n        ...(property.type === 'Числовое поле' ? {\n          min: property.validation.min,\n          max: property.validation.max\n        } : {}),\n      },\n      ...(property.type === 'Выпадающий список' ? {\n        options: property.options\n      } : {})\n    }\n    setProperty([...properties, { ...propertyObj }])\n  }\n\n  return isLoading ? <Loader /> :( <div\n    >\n      <form onSubmit={handleSubmit} id='property-form'>\n        <div>\n          <div className='property'>\n            <h2>Новая схема</h2>\n            <div className='schema-name'>\n              <TextField\n                label='Название схемы'\n                type='text'\n                placeholder='Укажите название схемы'\n                value={propertyName}\n                required\n                onChange={(e) => setPropertyName(e.target.value)}\n              />\n            </div>\n            <div className='divider'></div>\n            <h2>Свойства схемы</h2>\n            <div className='schema-description'>\n              <span>Схема должна содержать хотя бы одно свойство</span>\n            </div>\n            <div className='propery-saved-properties'>\n              {\n                properties.length > 0 && properties.map((property, propIndex) => <div key={propIndex + 1}>\n                  <PropertyForm\n                    propertyNumber={propIndex}\n                    property={property}\n                    toggleId={`toggle${propIndex}`}\n                    onUpdateProperty={onUpdateProperty}\n                    openTabIndex={openedTabs[propIndex as keyof typeof openedTabs]}\n                    handleOpenTab={handleOpenTab}\n                    deleteProperty={delProperty}\n                  />\n                </div>)\n              }\n            </div>\n            <div className='create-property-block'>\n              <PropertyForm\n                property={property}\n                propertyOrderNumber={properties.length + 1}\n                toggleId='property-toggle'\n                onUpdateProperty={onUpdateProperty}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='property-action-butttons'>\n          <Button\n            type='submit'\n            form='property-form'\n            variant='inline'\n            name='Добавить свойство'\n          />\n          <Button\n            type='button'\n            disabled={!(properties.length > 0 && propertyName)}\n            onClick={() => { return id ? update() : saveSchema() }} name='Сохранить схему'\n            variant='fill'\n          />\n        </div>\n      </form>\n      <div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddModal\n","import { useEffect, useRef } from \"react\";\n\nexport function usePrevious(value:any) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  },[value]);\n  return ref.current;\n}","import { FC, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport Button from '../../components/button/button';\nimport { useActions } from '../../hooks/useActions';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { RouteNames } from '../../router';\nimport './styles.scss'\n\nconst SchemasList: FC = () => {\n  const { fetchSchemas, removeSchemaItem } = useActions();\n  const { schemas } = useTypedSelector(state => state.schema);\n  const router = useHistory()\n  useEffect(() => {\n    fetchSchemas()\n  }, [])\n  const removeItem = (id: string) => {\n    removeSchemaItem(id)\n  }\n  const editItem = (id: string) => {\n    router.push(`${RouteNames.SCHEMAUPDT}/${id}`)\n  }\n  return (\n    <div>\n      <h2>Мои схемы</h2>\n      <div className='schema-list-wrapper'>\n        {schemas.length > 0 ? schemas.map(({ id, name, fields }) =>\n          <div key={id} className='schema-list-item'>\n            <span>{name}</span>\n            <div className='schemalist-buttons'>\n              <span onClick={() => router.push(`${RouteNames.SCHEMAITEM}/${id}`)}>Просмотреть</span>\n              <span onClick={(e) =>id && editItem(id)}>Изменить</span>\n              <span onClick={(e) => id && removeItem(id)}>Удалить</span>\n            </div>\n          </div>):<span> нет данных</span>}\n      </div>\n      <div className='schema-list-create-schema-button'>\n        <Button\n          name='Создать схему'\n          variant='fill'\n          onClick={()=>router.push(`${RouteNames.ADDMODAL}`)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SchemasList;\n","export const phoneValidationPattern = /\\+\\d \\d\\d\\d \\d\\d\\d \\d\\d \\d\\d/;\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Button from '../../components/button/button';\nimport DropDown from '../../components/dropdown/Dropdown';\nimport Loader from '../../components/loader/loader';\nimport TextField from '../../components/textfield/TextField';\nimport { phoneValidationPattern } from '../../constants';\nimport { useActions } from '../../hooks/useActions';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport './styles.scss'\n\nconst SchemaItem: FC = () => {\n  const [validationStatus, setValidationStatus] = useState('');\n  const [fields, setFields] = useState({})\n  const [fieldsError, setFieldsError] = useState({})\n  const { fetchSchemaItem } = useActions();\n  const { schemaItem, isLoading } = useTypedSelector(state => state.schema);\n  const { id } = useParams<{ id: string }>()\n  const handleSubmit = (e: any) => {\n    e.preventDefault()\n    handleValidation()\n  }\n\n  const handleValidation = () => {\n    let formIsValid = true\n    schemaItem.fields.forEach(({ label, validation, type }) => {\n      const innerStateField = fields[label as keyof typeof fields]\n      if (!innerStateField && validation.required) {\n        setFieldsError(state => ({ ...state, [label]: 'Поле должно быть заполнено' }))\n        formIsValid = false\n      }\n      else if (type === 'Числовое поле' && validation.required && validation.min && validation.max) {\n        if (isNaN(innerStateField)|| parseInt(innerStateField)  < parseInt(validation.min) || parseInt(innerStateField) > parseInt(validation.max)) {\n          setFieldsError(state => ({ ...state, [label]: `Значение должно быть не меньше ${validation.min} и не больше ${validation.max}` }))\n          formIsValid = false\n        }\n      }\n      else if (type === 'Текстовое поле' && validation.required && validation.min && validation.max && validation.pattern) {\n        if ((innerStateField as string).length < parseInt(validation.min) || (innerStateField as string).length > parseInt(validation.max)) {\n          setFieldsError(state => ({ ...state, [label]: `Символов должно быть не меньше ${validation.min} и не больше ${validation.max}` }))\n          formIsValid = false\n        }\n        else if (!(new RegExp(validation.pattern).test(innerStateField as string))) {\n          setFieldsError(state => ({ ...state, [label]: `Значение не соответсвует шаблону` }))\n          formIsValid = false\n        }\n      }\n      else if (type === 'Номер телефона' && validation.required) {\n        if (!(phoneValidationPattern.test(innerStateField as string))) {\n          setFieldsError(state => ({ ...state, [label]: `Телефон должен быть в формате +7 (999) 999 99 99 или в формате 8 (999) 999 99 99` }))\n          formIsValid = false\n        }\n      }\n    })\n    setValidationStatus(state => formIsValid ? 'passed' : 'failed')\n    return formIsValid;\n  }\n  const handleChangeField = (fieldName: string, fieldValue: string) => {\n    setFields(state => ({ ...state, [fieldName]: fieldValue }))\n    setValidationStatus(state => '')\n    setFieldsError(state => {\n      const errors = { ...fieldsError }\n      delete errors[fieldName as keyof typeof errors]\n      return ({ ...errors })\n    }\n    )\n  }\n\n  useEffect(() => {\n    fetchSchemaItem(id)\n  }, []\n  )\n  return isLoading ? <div className='loader-wrapper'><Loader /></div> :  (\n    <div className='form-item'>\n      {schemaItem.uid && <div className='fields-container'>\n        <h2>{schemaItem.name}</h2>\n        <form id='form-item' onSubmit={handleSubmit}>\n          {schemaItem.fields.map((field, index) =>\n            <div key={field.key}>\n              {field.options ?\n                <div className='form-item-dropdown'>\n                  <DropDown\n                    options={field.options.map((option) => option.value)}\n                    value={fields[field.label as keyof typeof fields] ? fields[field.label as keyof typeof fields] : ''}\n                    onChange={(e) => handleChangeField(field.label, e)}\n                    label={field.validation.required ? field.label: ''}\n                    error={fieldsError[field.label as keyof typeof fieldsError]}\n                  />\n                </div>\n                : <div className='form-item-shema-item'>\n                  <TextField\n                    error={fieldsError[field.label as keyof typeof fieldsError]}\n                    label={field.validation.required ? field.label: ''}\n                    value={fields[field.label as keyof typeof fields] ? fields[field.label as keyof typeof fields] : ''}\n                    onChange={(e) => handleChangeField(field.label, e.target.value)}\n                    placeholder={`Введите ${field.label}`}\n                  />\n                </div>}\n            </div>)}\n        </form>\n        <div className='validation-button'>\n          <Button variant='fill' type='submit' form='form-item' name='Валидация' />\n        </div>\n        {validationStatus !== '' && <div className={`validation-result ${validationStatus === 'failed' ? 'validation-error' : 'validation-success'}`}>\n          <span>x</span>\n          <span>{validationStatus === 'passed' ? 'Валидация пройденв' : 'Валидация не пройдена'}</span>\n        </div>}\n      </div>}\n    </div>\n  );\n};\n\nexport default SchemaItem;","import {Switch, Route, Redirect} from 'react-router-dom';\nimport {privateRoutes, publicRoutes, RouteNames} from \"../router\";\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\n\nconst AppRouter = () => {\n    const {isAuth} = useTypedSelector(state => state.auth);\n\n    return (\n        isAuth ?\n            <Switch>\n                {privateRoutes.map(route =>\n                    <Route path={route.path}\n                           exact={route.exact}\n                           component={route.component}\n                           key={route.path}\n                    />\n                )}\n                <Redirect to={RouteNames.SCHEMAS} />\n            </Switch>\n            :\n            <Switch>\n                {publicRoutes.map(route =>\n                    <Route path={route.path}\n                           exact={route.exact}\n                           component={route.component}\n                           key={route.path}\n                    />\n                )}\n                <Redirect to={RouteNames.LOGIN} />\n            </Switch>\n    );\n};\n\nexport default AppRouter;\n","import { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RouteNames } from \"../../router\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport \"./navbarstyle.scss\";\nimport { useActions } from \"../../hooks/useActions\";\nimport Flogo from '../../flogo.jpg'\nconst Navbar: FC = () => {\n  const router = useHistory()\n  const { isAuth } = useTypedSelector(state => state.auth);\n  const { logout } = useActions()\n\n\n  return (\n    <div>\n      <div>\n        {isAuth\n          &&\n          <div className='navbar-wrapper'>\n            <div className='navbar-menu'>\n              <img src={Flogo} />\n              <div\n                onClick={() => {\n                  router.push(RouteNames.SCHEMAS)\n                }}\n                key={1}\n              >\n                Мои схемы\n              </div>\n              <div\n                onClick={() => router.push(RouteNames.ADDMODAL)}\n                key={1}\n              >\n                Создать схему\n              </div>\n            </div>\n            <div\n              onClick={logout}\n              key={1}\n              className='logout-btn'\n            >\n              Выйти\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { FC, useEffect } from 'react';\nimport AppRouter from \"./components/AppRouter\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport './App.css';\nimport { useActions } from \"./hooks/useActions\";\n\n\nconst App: FC = () => {\n  const { isLoggedinAction } = useActions();\n\n  useEffect(() => {\n    isLoggedinAction()\n  }, [])\n\n  return (\n    <>\n      <Navbar />\n      <AppRouter />\n    </>\n  );\n};\n\nexport default App;\n","import {AuthAction, AuthActionEnum, AuthState} from \"./types\";\nimport {IUser} from \"../../../models/IUser\";\n\n\nconst initialState: AuthState = {\n    isAuth: false,\n    error: '',\n    isLoading: false,\n    user: {} as IUser\n}\n\nexport default function authReducer(state = initialState, action: AuthAction): AuthState {\n    switch (action.type) {\n        case AuthActionEnum.SET_AUTH:\n            return {...state, isAuth: action.payload, isLoading: false}\n        case AuthActionEnum.SET_USER:\n            return {...state, user: action.payload}\n        case AuthActionEnum.SET_ERROR:\n            return {...state, error: action.payload, isLoading: false}\n        case AuthActionEnum.SET_IS_LOADING:\n            return {...state, isLoading: action.payload}\n        default:\n            return state;\n    }\n}\n","import { SchemaAction, SchemaActionEnum, SchemaState } from \"./types\";\n\n\nconst initialState: SchemaState = {\n  schemas: [],\n  schemaItem: {\n    uid: '',\n    name: '',\n    fields: []\n  },\n  error: '',\n  isLoading: false,\n}\n\nexport default function SchemaReducer(state = initialState, action: SchemaAction): SchemaState {\n  switch (action.type) {\n    case SchemaActionEnum.SET_SCHEMA:\n      return { ...state, schemas: action.payload }\n    case SchemaActionEnum.SET_SCHEMA_ITEM:\n      return { ...state, schemaItem: action.payload }\n    case SchemaActionEnum.SET_ERROR:\n      return { ...state, error: action.payload }\n    case SchemaActionEnum.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload }\n    default:\n      return state;\n  }\n}\n","import auth from './auth'\nimport schema from './formschema'\n\nconst reducers = {\n  auth,\n  schema\n}\nexport default reducers\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst rootReducer = combineReducers(reducers)\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {store} from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}